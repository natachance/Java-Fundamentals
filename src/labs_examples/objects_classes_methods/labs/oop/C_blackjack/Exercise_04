
Make the BlackJack game we just created better. Add a way for the user and the computer to bet.

Give the user and computer both an initial sum of "money" and let them play with it.
-in player constructor, assign initial val1? ($100 per player/dealer)

Take actual bets.
-basically just changing an int for each player and an int for total pot val1
-potValue += playerBet + dealerBet
-scanner input in controller method
-how to manage dealer bets?
    -if dealer hand = 19-21, bet 40
    -if dealer hand = 14-18, bet 30
    -if dealer hand = 9-13, bet 20
    -if dealer hand = 1-8 bet 10

-minimum bets (later)


If either user runs out of money, stop the game.
if potValue = 0, print "You're out of money! Game over.", and return;

Consistently print out the current amount of money both the user and computer have after each game.
-add line to each existing game ending text option

Any additional features you'd like to add? Go for it!

-ask if want to play another game after overall game ends


    //allows overriding of printHand method, which excludes dealer from printing - to show cards at end
    public void showHand(){
        for(Card c : hand.getCards()){ //prints each card in the hand (visits each card in the hand ArrayList)
            System.out.println(c.toString());
        }
    }

    NEXT STEPS
    //need to add ability/question to bet more,
    plus end game when one person runs out of $,
    plus add losing players bet to other person's potValue


CURRENT ISSUES TO FIX
5/9/19
when I increased my bet, stopped asking if I wanted another card, dealer stopped taking cards - stuck in loop asking each
if want to increase bet
I think this is because when I said Y to another card, it bumped me into the while loop with condition player continue
Might need to move betting additions up to card additions somehow
-tried moving these up to right after player takes another card and dealer takes another card respectively
-seems like this worked!

When I say N to another card, got stuck infinitely looping the part where it shows dealers cards, points, and says dealer wins.
-changed while to if
-also took out player.getHand().getHandValue() <= 21 && dealer.getHand().getHandValue() <= 21 in favor of over21 method
-seems like this worked!

When new hand dealt, still printing cards from last hand first, then adding two new cards.
Probably need to clear Hand array somehow in addition to deck array.
-looked and think it's actually Cards array
-will try to build method to do this similar to shuffleDeck method
-it's working!

Can I make the over 21 message immediate? Still prompting bet first, and also need to update bet after hand over 21:
Dealer took another card.
Dealer bet remains: $50.
The dealer went over 21! You win the hand!

-tried switching if playerContinue & dealerContinue to while loops, adding if handOver21 blocks after card deal, & if
 true set playerContinue & dealerContinue to false with break statement - hoping it breaks out of while loop and then
 because variables set to false, breaks out of outer loop too
 -seems to work!

 Can bet more than I have left in subsequent hands
 -need to add or duplicate if statement checking bet amount
 -done and working!

 -need to look at betting methods, see if can consolidate further
 -need to look at over21 methods, seems like could be duplication, and still not simple enough

 -checkBet - it's working ok but not returning the playerBet, or, the playerBet variable isn't getting updated to the
 new bet like it should
 -fixed!

 -on second hand, didn't ask if I wanted another card, just ended game
 -realized player.continuePlay was still set to false
 -added to resetGame method to set player and dealer.continuePlay back to true

 -when checkBet method is called, it reads input and gives message that pot isn't enough, but still holds original number
 as val1 (example betting 100 with previous bet of 20, says enter lower, but still adds 100 so total bet of 120)
 -changed logic in playerAddToBet method to add scanner input only after checkBet method is called (to include udpated bet)
 -issue may lie with not subtracting bets from pot val1 immediately?
 -added logic to subtract bets from potValue in real time, then whoever wins gets own bet plus opponent bet plus current
 pot val1

 -dealer bet is still not right, not subtracting dealer bet somewhere, adding dealer bet and player bet to original total
 when dealer wins

 -still have issue when dealer raises bet, dealer not getting as much $ as should when dealer wins
 -tried updating dealerAddToBet method, split out updated bet to subtract (may have been subtracting entire bet)
 -didn't work
 -found redundancy in dealerAddToBet subtracting what was already subtracted in dealerBet method (which is called as part
 of dealerAddToBet)